apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: kubectl-bookinfo
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/tags: CLI, kubectl
spec:
  description: >-
    This task is the generic kubectl CLI task which can be used
    to run all kinds of k8s commands
  workspaces:
    - name: manifest-dir
      optional: true
    - name: kubeconfig-dir
      optional: true
  results:
    - name: output-result
      description: some result can be emitted if someone wants to.
  params:
    - name: KUBECTL_IMAGE
      default: gcr.io/cloud-builders/kubectl@sha256:17f354a9d524e48fe2cb656acca9e6ed5e3e4f46c5d160ab058f31c4b47dc2ad
      description: Kubectl wrapper image (IMAGE DATE 2021/02/04)
    - name: TARGET_APP
      default: reviews
      description: deploy target application in BookInfo
    - name: IMAGE
      default: docker.io/istio/examples-bookinfo-reviews-v2
      description: deployment target image url 
    - name: IMAGE_DIGEST
      default: sha256:82497d66ab8cac1ad9506218e4ccc708ec1db59450c6c4c8d645d1b161611a5d
      description: deployment target image digest
  steps:
    - name: kubectl
      image: $(params.KUBECTL_IMAGE)
      script: |
        #!/usr/bin/env bash
        [[ "$(workspaces.manifest-dir.bound)" == "true" ]] && \
        cd $(workspaces.manifest-dir.path)

        [[ "$(workspaces.kubeconfig-dir.bound)" == "true" ]] && \
        [[ -f $(workspaces.kubeconfig-dir.path)/kubeconfig ]] && \
        export KUBECONFIG=$(workspaces.kubeconfig-dir.path)/kubeconfig

        echo "--- DEPLOY BOOKINFO APPS WITHOUT $(params.TARGET_APP) ---";
        ls -la ./
        kubectl apply -f ./deploy/base/bookinfo.yaml -l app!=$(params.TARGET_APP);

        echo "--- SHOW $(params.TARGET_APP) IMAGE ---";
        sed -ne "s;___IMAGE_URL___;$(params.IMAGE);" \
          -ne "s;___IMAGE_DIGEST___;$(params.IMAGE_DIGEST);p" \
          ./deploy/base/bookinfo-$(params.TARGET_APP).yaml;
  
        echo "--- DEPLOY $(params.TARGET_APP) APP ---";
        kubectl delete -f ./deploy/base/bookinfo-$(params.TARGET_APP).yaml;
        sed -e "s;___IMAGE_URL___;$(params.IMAGE);g" \
          -e "s;___IMAGE_DIGEST___;$(params.IMAGE_DIGEST);g" \
          ./deploy/base/bookinfo-$(params.TARGET_APP).yaml | kubectl apply -f - ;

        echo "--- SHOW DEPLOYMENTS AND SERVECES ---";
        kubectl get deployment,service;
